# Kubernetes Deployment Configuration
# Location Podcast Generator - Production

apiVersion: v1
kind: Namespace
metadata:
  name: location-podcast
  labels:
    name: location-podcast
    environment: production

---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: location-podcast
  labels:
    app: location-podcast
    component: backend
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: location-podcast
      component: backend
  template:
    metadata:
      labels:
        app: location-podcast
        component: backend
        version: v1.0.0
    spec:
      containers:
      - name: backend
        image: location-podcast/backend:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: secret-key
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: location-podcast
  labels:
    app: location-podcast
    component: frontend
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: location-podcast
      component: frontend
  template:
    metadata:
      labels:
        app: location-podcast
        component: frontend
        version: v1.0.0
    spec:
      containers:
      - name: frontend
        image: location-podcast/frontend:latest
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: location-podcast
  labels:
    app: location-podcast
    component: backend
spec:
  type: ClusterIP
  selector:
    app: location-podcast
    component: backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: location-podcast
  labels:
    app: location-podcast
    component: frontend
spec:
  type: LoadBalancer
  selector:
    app: location-podcast
    component: frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 80
    protocol: TCP
    name: https

---
# Horizontal Pod Autoscaler - Backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: location-podcast
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Horizontal Pod Autoscaler - Frontend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: location-podcast
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
